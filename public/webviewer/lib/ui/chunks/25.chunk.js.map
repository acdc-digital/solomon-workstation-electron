{"version":3,"sources":["webpack:///./src/ui/src/components/ColorPickerOverlay/ColorPickerOverlay.scss?886a","webpack:///./src/ui/src/components/ColorPickerOverlay/ColorPickerOverlay.scss","webpack:///./src/ui/src/components/Header/OfficeHeader.scss?e686","webpack:///./src/ui/src/components/Header/OfficeHeader.scss","webpack:///./src/ui/src/components/OfficeEditorImageFilePickerHandler/OfficeEditorImageFilePickerHandler.js","webpack:///./src/ui/src/components/OfficeEditorImageFilePickerHandler/index.js","webpack:///./src/ui/src/components/ColorPickerOverlay/ColorPickerOverlay.js","webpack:///./src/ui/src/components/ColorPickerOverlay/index.js","webpack:///./src/ui/src/helpers/openOfficeEditorFilePicker.js","webpack:///./src/ui/src/constants/officeEditor.js","webpack:///./src/ui/src/components/Header/OfficeEditorToolsHeader.js"],"names":["api","content","__esModule","default","module","i","options","styleTag","webComponents","document","getElementsByTagName","length","clonedStyleTags","webComponent","shadowRoot","appendChild","onload","forEach","styleNode","innerHTML","cloneNode","push","head","exports","locals","ACCEPTED_FORMATS","map","format","join","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","result","onerror","OfficeEditorImageFilePickerHandler","dispatch","useDispatch","openDocument","e","target","files","actions","openElement","DataElements","LOADING_MODAL","base64","core","getOfficeEditor","insertImageAtCursor","closeElement","showWarningMessage","title","message","picker","getRootNode","querySelector","value","className","id","type","accept","onChange","ColorPickerOverlay","color","onStyleChange","portalElementId","useState","left","right","top","position","setPosition","overlayRef","useRef","isOpen","useSelector","state","selectors","isElementOpen","useOnClickOutside","menuButton","contains","closeElements","useLayoutEffect","onResize","overlayPosition","getOverlayPositionBasedOn","window","addEventListener","removeEventListener","createPortal","DataElementWrapper","data-element","classNames","Popup","open","closed","style","ref","ColorPalette","property","useMobileMinMaxWidth","ColorPalettePicker","enableEdit","getElementById","click","LINE_SPACING_OPTIONS","JUSTIFICATION_OPTIONS","LIST_OPTIONS","OfficeEditorListStylePresets","Core","Document","OFFICE_BULLET_OPTIONS","enum","BULLET","img","BULLET_SQUARE","SQUARE_BULLET","DIAMOND","CHECK","ARROW","OFFICE_NUMBER_OPTIONS","NUMBER_LATIN_ROMAN_1","NUMBER_DECIMAL","NUMBER_LATIN_ROMAN_2","LATIN_ROMAN","ROMAN_LATIN_NUMBER","availableStylePresetMap","fontSize","availablePointSizes","focusContent","isSafari","isIOS","getViewerElement","focus","TextStyles","cursorProperties","isBold","isItalic","isUnderline","ActionButton","isActive","onClick","isTextSelected","toggleSelectedTextStyle","setCursorStyle","bold","dataElement","italic","underline","underlineStyle","JustificationOptions","justification","updateParagraphStyle","getDocumentViewer","clearSelection","ListOptions","listType","bulletListObjects","key","src","numberListOptions","toggleListSelection","Dropdown","images","columns","onClickItem","val","setListPreset","decreaseIndent","increaseIndent","OfficeEditorToolsHeader","DataElement","OFFICE_EDITOR_TOOLS_HEADER","getOfficeEditorCursorProperties","getOfficeEditorSelectionProperties","getAvailableFontFaces","getActiveTheme","getCSSFontValues","shallowEqual","selectionProperties","availableFontFaces","activeTheme","cssFontValues","containerWidth","setContainerWidth","initialHeaderWidth","setInitialHeaderWidth","visibleGroupCount","setVisibleGroupCount","showMoreTools","setShowMoreTools","useEffect","onCursorPropertiesUpdated","setOfficeEditorCursorProperties","onSelectionPropertiesUpdated","setOfficeEditorSelectionProperties","getDocument","fontFace","includes","addOfficeEditorAvailableFontFace","actualContainerWidth","pointSize","pointSizeSelectionKey","undefined","toString","lineHeight","lineHeightMultiplier","lineSpacing","Object","values","reduce","a","b","aDiff","Math","abs","bDiff","calculateLineSpacing","fontPointSize","isLightMode","Theme","LIGHT","wvFontColor","Annotations","Color","r","g","useColorIconBorder","convertCursorToStylePreset","paragraphTextStyle","currentColor","stylePreset","rgbaToHex","slice","keys","bounds","width","measureRef","items","onOpened","item","parseInt","fontColor","newTextStyle","R","G","B","textStyle","setTimeout","getCustomItemStyle","padding","applyCustomStyleToButton","currentSelectionKey","updateSelectionStyle","maxHeight","customDataValidator","font","hasInput","isNaN","isSearchEnabled","ToggleElementButton","element","iconClassName","_","lineSpacingOption","displayButton","OFFICE_EDITOR_TOOLS_HEADER_INSERT_IMAGE","openOfficeEditorFilePicker"],"mappings":"+EAAA,IAAIA,EAAM,EAAQ,IACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,SAAUC,GACX,MAAMC,EAAgBC,SAASC,qBAAqB,oBACpD,GAAIF,EAAcG,OAAS,EAAG,CAC5B,MAAMC,EAAkB,GACxB,IAAK,IAAIP,EAAI,EAAGA,EAAIG,EAAcG,OAAQN,IAAK,CAC7C,MAAMQ,EAAeL,EAAcH,GACnC,GAAU,IAANA,EACFQ,EAAaC,WAAWC,YAAYR,GACpCA,EAASS,OAAS,WACZJ,EAAgBD,OAAS,GAC3BC,EAAgBK,QAASC,IAEvBA,EAAUC,UAAYZ,EAASY,iBAIhC,CACL,MAAMD,EAAYX,EAASa,WAAU,GACrCP,EAAaC,WAAWC,YAAYG,GACpCN,EAAgBS,KAAKH,UAIzBT,SAASa,KAAKP,YAAYR,IAG5C,WAAoB,GAEPP,EAAIC,EAASK,GAI1BF,EAAOmB,QAAUtB,EAAQuB,QAAU,I,sBC3CnCD,EAAUnB,EAAOmB,QAAU,EAAQ,GAAR,EAAkE,IAKrFF,KAAK,CAACjB,EAAOC,EAAI,opGAAqpG,KAG9qGkB,EAAQC,OAAS,CAChB,kBAAqB,OACrB,mBAAsB,S,qBCVvB,IAAIxB,EAAM,EAAQ,IACFC,EAAU,EAAQ,MAIC,iBAFvBA,EAAUA,EAAQC,WAAaD,EAAQE,QAAUF,KAG/CA,EAAU,CAAC,CAACG,EAAOC,EAAIJ,EAAS,MAG9C,IAAIK,EAAU,CAEd,OAAiB,SAAUC,GACX,MAAMC,EAAgBC,SAASC,qBAAqB,oBACpD,GAAIF,EAAcG,OAAS,EAAG,CAC5B,MAAMC,EAAkB,GACxB,IAAK,IAAIP,EAAI,EAAGA,EAAIG,EAAcG,OAAQN,IAAK,CAC7C,MAAMQ,EAAeL,EAAcH,GACnC,GAAU,IAANA,EACFQ,EAAaC,WAAWC,YAAYR,GACpCA,EAASS,OAAS,WACZJ,EAAgBD,OAAS,GAC3BC,EAAgBK,QAASC,IAEvBA,EAAUC,UAAYZ,EAASY,iBAIhC,CACL,MAAMD,EAAYX,EAASa,WAAU,GACrCP,EAAaC,WAAWC,YAAYG,GACpCN,EAAgBS,KAAKH,UAIzBT,SAASa,KAAKP,YAAYR,IAG5C,WAAoB,GAEPP,EAAIC,EAASK,GAI1BF,EAAOmB,QAAUtB,EAAQuB,QAAU,I,sBC3CnCD,EAAUnB,EAAOmB,QAAU,EAAQ,GAAR,EAAkE,IAKrFF,KAAK,CAACjB,EAAOC,EAAI,izFAAkzF,KAG30FkB,EAAQC,OAAS,CAChB,kBAAqB,OACrB,mBAAsB,S,+xBCTvB,8lGAAAnB,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,+XASA,IAAMoB,EAAmB,CAAC,MAAO,OAAQ,MAAO,OAAOC,KACrD,SAACC,GAAM,iBAASA,MAChBC,KAAK,MAEDC,EAAW,SAACC,GAAI,OAAK,IAAIC,SAAQ,SAACC,EAASC,GAC/C,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcN,GACrBI,EAAOlB,OAAS,kBAAMgB,EAAQE,EAAOG,SACrCH,EAAOI,QAAUL,MChBJM,EDmBW,WACxB,IAAMC,EAAWC,cAEXC,EAAY,eAvBpB,EAuBoB,GAvBpB,EAuBoB,UAAG,WAAOC,GAAC,2EACG,KAAxBb,EAAOa,EAAEC,OAAOC,MAAM,IAClB,CAAF,gBAEsD,OAFtD,SAEJL,EAASM,IAAQC,YAAYC,IAAaC,gBAAgB,SACrCpB,EAASC,GAAK,OAAvB,OAANoB,EAAS,EAAH,cACNC,IAAKC,kBAAkBC,oBAAoBH,GAAO,OACxDV,EAASM,IAAQQ,aAAaN,IAAaC,gBAAgB,kDAE3DT,EAASM,IAAQQ,aAAaN,IAAaC,gBAC3CT,EAASM,IAAQS,mBAAmB,CAClCC,MAAO,QACPC,QAAS,KAAMA,WACb,SAEAC,EAASC,cAAcC,cAAc,iCAEzCF,EAAOG,MAAQ,IAChB,yDAzCP,+KA2CG,gBApBiB,sCAsBlB,OACE,yBAAKC,UAAU,qBACb,2BACEC,GAAG,4BACHC,KAAK,OACLC,OAAQxC,EACRyC,SAAUxB,M,2mCEpClB,ICdeyB,EDcY,SAAH,GAIlB,IAHJC,EAAK,EAALA,MACAC,EAAa,EAAbA,cAAa,IACbC,uBAAe,IAAG,QAAK,EAEwE,IAA/DC,oBAAS,iBAAO,CAAEC,KAAM,QAASC,MAAO,OAAQC,IAAK,WAAU,GAAxFC,EAAQ,KAAEC,EAAW,KACtBC,EAAaC,iBAAO,MAExBC,EAGA,EAFEC,aAAY,SAACC,GAAK,MAAK,CACzBC,IAAUC,cAAcF,EAAO,0BAC/B,GAHM,GAKFzC,EAAWC,cAwBjB,OAfA2C,YAAkBP,GAPK,SAAClC,GACtB,IAAM0C,EAAa5E,SAASmD,cAAc,qCAChByB,aAAU,EAAVA,EAAYC,SAAS3C,EAAEC,UAE/CJ,EAASM,IAAQyC,cAAc,CAAC,2BAKpCC,2BAAgB,WACd,GAAIT,EAAQ,CACV,IAAMU,EAAW,WACf,IAAMC,EAAkBC,YAA0B,kBAAmBd,GACrED,EAAYc,IAKd,OAHAD,IAEAG,OAAOC,iBAAiB,SAAUJ,GAC3B,kBAAMG,OAAOE,oBAAoB,SAAUL,OAEnD,CAACV,IAEGgB,uBACL,kBAACC,EAAA,EAAkB,CACjBC,eAAa,qBACbnC,UAAWoC,IAAW,CACpB/B,oBAAoB,EACpBgC,OAAO,EACPC,KAAMrB,EACNsB,QAAStB,IAEXuB,MAAO3B,EACP4B,IAAK1B,GAEL,kBAAC2B,EAAA,EAAY,CACXpC,MAAOA,EACPqC,SAAS,YACTpC,cAAeA,EACfqC,sBAAoB,IAEtB,kBAACC,EAAA,EAAkB,CACjBvC,MAAOA,EACPC,cAAeA,EACfuC,YAAU,KAGdjD,cAAckD,eAAevC,K,SE3ElB,aAAM,MACsC,QAAzD,EAAAX,cAAcC,cAAc,qCAA6B,OAAzD,EAA2DkD,S,SCHhDC,EAAuB,CAClC,OAAU,EACV,KAAQ,KACR,IAAO,IACP,OAAU,GAGCC,EACL,OADKA,EAEH,SAFGA,EAGJ,QAHIA,EAIL,OAGKC,EACF,UADEA,EAEA,YAKPC,EAA+BtB,OAAOuB,KAAKC,SAASF,6BAC7CG,EAAwB,CACnC,CAAEC,KAAMJ,EAA6BK,OAAQC,IAAK,wCAClD,CAAEF,KAAMJ,EAA6BO,cAAeD,IAAK,wCACzD,CAAEF,KAAMJ,EAA6BQ,cAAeF,IAAK,+CACzD,CAAEF,KAAMJ,EAA6BS,QAASH,IAAK,yCACnD,CAAEF,KAAMJ,EAA6BU,MAAOJ,IAAK,uCACjD,CAAEF,KAAMJ,EAA6BW,MAAOL,IAAK,wCAGtCM,EAAwB,CACnC,CAAER,KAAMJ,EAA6Ba,qBAAsBP,IAAK,gDAChE,CAAEF,KAAMJ,EAA6Bc,eAAgBR,IAAK,gDAC1D,CAAEF,KAAMJ,EAA6Be,qBAAsBT,IAAK,gDAChE,CAAEF,KAAMJ,EAA6BgB,YAAaV,IAAK,6CACvD,CAAEF,KAAMJ,EAA6BiB,mBAAoBX,IAAK,8C,m8ECnChE,8lGAAAnH,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,ssDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,mkBA6BA,IAAM+H,GAA0B,CAC9B,cAAe,CACbC,SAAU,OACVjE,MAAO,WAET,MAAS,CACPiE,SAAU,OACVjE,MAAO,WAET,SAAY,CACViE,SAAU,OACVjE,MAAO,WAET,YAAa,CACXiE,SAAU,OACVjE,MAAO,WAET,YAAa,CACXiE,SAAU,OACVjE,MAAO,WAET,YAAa,CACXiE,SAAU,OACVjE,MAAO,WAET,YAAa,CACXiE,SAAU,OACVjE,MAAO,WAET,YAAa,CACXiE,SAAU,OACVjE,MAAO,YAGLkE,GAAsB,CAAC,IAAK,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAkB7FC,GAAe,WAGfC,KAAYC,KAIhBtF,IAAKuF,mBAAmBC,SAGpBC,GAAa,SAAH,GAA4D,IAAtDC,EAAgB,EAAhBA,iBAAkBC,EAAM,EAANA,OAAQC,EAAQ,EAARA,SAAUC,EAAW,EAAXA,YACxD,OACE,oCACE,kBAACC,EAAA,EAAY,CACXC,SAAUJ,EACVK,QAAS,WACHhG,IAAKC,kBAAkBgG,iBACzBjG,IAAKC,kBAAkBiG,wBAAwB,QAE/ClG,IAAKC,kBAAkBkG,eAAe,CAAEC,MAAOV,EAAiBU,OAElEhB,MAEFiB,YAAY,qBACZhG,MAAM,oBACNgE,IAAI,mBAEN,kBAACyB,EAAA,EAAY,CACXC,SAAUH,EACVI,QAAS,WACHhG,IAAKC,kBAAkBgG,iBACzBjG,IAAKC,kBAAkBiG,wBAAwB,UAE/ClG,IAAKC,kBAAkBkG,eAAe,CAAEG,QAASZ,EAAiBY,SAEpElB,MAEFiB,YAAY,uBACZhG,MAAM,sBACNgE,IAAI,qBAEN,kBAACyB,EAAA,EAAY,CACXC,SAAUF,EACVG,QAAS,WACHhG,IAAKC,kBAAkBgG,iBACzBjG,IAAKC,kBAAkBiG,wBAAwB,aAE/ClG,IAAKC,kBAAkBkG,eAAe,CACpCI,UAA+C,SAApCb,EAAiBc,iBAGhCpB,MAEFiB,YAAY,0BACZhG,MAAM,yBACNgE,IAAI,0BAMNoC,GAAuB,SAAH,GAA0B,IAApBC,EAAa,EAAbA,cAC9B,OACE,oCACE,kBAACZ,EAAA,EAAY,CACXC,SAAUW,IAAkB7C,EAC5BwC,YAAY,2BACZhG,MAAM,yBACNgE,IAAI,uBACJ2B,QAAS,WACPhG,IAAKC,kBAAkB0G,qBAAqB,CAC1CD,cAAe,SAEjB1G,IAAKC,kBAAkBkG,eAAe,CACpCO,cAAe,SAGjBtB,KACApF,IAAK4G,oBAAoBC,oBAG7B,kBAACf,EAAA,EAAY,CACXC,SAAUW,IAAkB7C,EAC5BwC,YAAY,6BACZhG,MAAM,2BACNgE,IAAI,yBACJ2B,QAAS,WACPhG,IAAKC,kBAAkB0G,qBAAqB,CAC1CD,cAAe,WAEjB1G,IAAKC,kBAAkBkG,eAAe,CACpCO,cAAe,WAGjBtB,KACApF,IAAK4G,oBAAoBC,oBAG7B,kBAACf,EAAA,EAAY,CACXC,SAAUW,IAAkB7C,EAC5BwC,YAAY,4BACZhG,MAAM,0BACNgE,IAAI,wBACJ2B,QAAS,WACPhG,IAAKC,kBAAkB0G,qBAAqB,CAC1CD,cAAe,UAEjB1G,IAAKC,kBAAkBkG,eAAe,CACpCO,cAAe,UAGjBtB,KACApF,IAAK4G,oBAAoBC,oBAG7B,kBAACf,EAAA,EAAY,CACXC,SAAUW,IAAkB7C,EAC5BwC,YAAY,wBACZhG,MAAM,uBACNgE,IAAI,uBACJ2B,QAAS,WACPhG,IAAKC,kBAAkB0G,qBAAqB,CAC1CD,cAAe,SAEjB1G,IAAKC,kBAAkBkG,eAAe,CACpCO,cAAe,SAGjBtB,KACApF,IAAK4G,oBAAoBC,sBAO7BC,GAAc,SAAH,GAAqB,IAAfC,EAAQ,EAARA,SACfC,EAAoB9C,EAAsB3F,KAAI,SAACpB,GAAO,MAAM,CAChEwD,UAAW,+BACXsG,IAAK9J,EAAO,KACZ+J,IAAK/J,EAAQkH,QAGT8C,EAAoBxC,EAAsBpG,KAAI,SAACpB,GAAO,MAAM,CAChEwD,UAAW,+BACXsG,IAAK9J,EAAO,KACZ+J,IAAK/J,EAAQkH,QAGf,OACE,oCACE,kBAACyB,EAAA,EAAY,CACXC,SAAUgB,IAAajD,EACvBuC,YAAY,4BACZhG,MAAM,0BACNgE,IAAI,iCACJ1D,UAAU,oBACVqF,QAAS,WACPhG,IAAKC,kBAAkBmH,oBAAoBtD,GAC3CsB,QAGJ,kBAACiC,EAAA,EAAQ,CACPhB,YAAY,qCACZiB,OAAQN,EACRO,QAAS,EACTC,YAAa,SAACC,GACZzH,IAAKC,kBAAkByH,cAAcD,IAEvC9G,UAAW,wBAEb,kBAACmF,EAAA,EAAY,CACXC,SAAUgB,IAAajD,EACvBuC,YAAY,4BACZhG,MAAM,0BACNgE,IAAI,0BACJ1D,UAAU,oBACVqF,QAAS,WACPhG,IAAKC,kBAAkBmH,oBAAoBtD,GAC3CsB,QAGJ,kBAACiC,EAAA,EAAQ,CACPhB,YAAY,qCACZiB,OAAQH,EACRI,QAAS,EACTC,YAAa,SAACC,GACZzH,IAAKC,kBAAkByH,cAAcD,IAEvC9G,UAAW,wBAEb,kBAACmF,EAAA,EAAY,CACXO,YAAY,gCACZhG,MAAM,8BACNgE,IAAI,qBACJ2B,QAAO,aAAE,8FACDhG,IAAKC,kBAAkB0H,iBAAgB,OAC7CvC,KAAe,6CAGnB,kBAACU,EAAA,EAAY,CACXO,YAAY,gCACZhG,MAAM,8BACNgE,IAAI,qBACJ2B,QAAO,aAAE,8FACDhG,IAAKC,kBAAkB2H,iBAAgB,OAC7CxC,KAAe,+CAkbVyC,UA3aiB,WAC9B,IAAMxI,EAAWC,cAkBhB,IAVGuC,aACF,SAACC,GAAK,MAAK,CACTC,IAAUC,cAAcF,EAAOgG,IAAYC,4BAC3ChG,IAAUiG,gCAAgClG,GAC1CC,IAAUkG,mCAAmCnG,GAC7CC,IAAUmG,sBAAsBpG,GAChCC,IAAUoG,eAAerG,GACzBC,IAAUqG,iBAAiBtG,MAE7BuG,KACD,GAhBCzG,EAAM,KACN8D,EAAgB,KAChB4C,EAAmB,KACnBC,EAAkB,KAClBC,EAAW,KACXC,EAAa,KAawC,IAAXrH,mBAAS,GAAE,GAAhDsH,EAAc,KAAEC,EAAiB,KACuB,IAAXvH,mBAAS,GAAE,GAAxDwH,EAAkB,KAAEC,EAAqB,KACa,IAAXzH,mBAAS,GAAE,GAAtD0H,EAAiB,KAAEC,EAAoB,KACW,IAAf3H,oBAAS,GAAM,GAAlD4H,EAAa,KAAEC,EAAgB,KAEtCC,qBAAU,WAAM,QACRC,EAA4B,SAACzD,GACjCrG,EAASM,IAAQyJ,gCAAgC1D,KAE7C2D,EAA+B,SAACf,GACpCjJ,EAASM,IAAQ2J,mCAAmChB,KAMtD,OAHkB,QAAlB,EAAAtI,IAAKuJ,qBAAa,OAAlB,EAAoB7G,iBAAiB,0BAA2ByG,GAC9C,QAAlB,EAAAnJ,IAAKuJ,qBAAa,OAAlB,EAAoB7G,iBAAiB,6BAA8B2G,GAE5D,WAAM,QACO,QAAlB,EAAArJ,IAAKuJ,qBAAa,OAAlB,EAAoB5G,oBAAoB,6BAA8B0G,GACpD,QAAlB,EAAArJ,IAAKuJ,qBAAa,OAAlB,EAAoB5G,oBAAoB,0BAA2BwG,MAEpE,IAEHD,qBAAU,WACJxD,EAAiB8D,WAAajB,EAAmBkB,SAAS/D,EAAiB8D,WAC7EnK,EAASM,IAAQ+J,iCAAiChE,EAAiB8D,aAEpE,CAACjB,EAAoB7C,IAExBwD,qBAAU,WACR,GAAuB,IAAnBR,GAA+C,IAAvBE,EAA5B,CAIA,IAAMe,EAAuBjB,EAAiB,GAI5CK,EAFAY,GAAwBf,EAEH,EAErBe,EAAuBf,GACvBe,GAAyBf,EAnSN,IAED,GAmSG,EAErBe,EAAwBf,EAvSL,IAED,IAsSlBe,GAAyBf,EAxSN,IACS,IACV,IAuSlBe,GAAwB,IAEH,EAEA,MAEtB,CAACjB,EAAgBE,IAEpB,IA7SwC3H,EA0UlCgF,EAAiBjG,IAAKC,kBAAkBgG,iBACxCN,EAASM,EAAiBqC,EAAoBlC,KAAOV,EAAiBU,KACtER,EAAWK,EAAiBqC,EAAoBhC,OAASZ,EAAiBY,OAC1ET,EAAcI,EAAwD,WAAvCqC,EAAoB9B,eAAkE,WAApCd,EAAiBc,eAClGgD,EAAWvD,EAAiBqC,EAAoBkB,SAAW9D,EAAiB8D,SAC5EI,EAAY3D,EAAiBqC,EAAoBsB,UAAYlE,EAAiBkE,UAC9EC,OAAsCC,IAAdF,OAA0BE,EAAYF,EAAUG,WACxErD,EAAgBT,EAAiBqC,EAAoB5B,cAAgBhB,EAAiBgB,cACtFsD,EArCuB,SAACC,EAAsBD,EAAY9E,GAE9D,IAAMgF,EAAcF,EAAaA,EAAa9E,EAAW+E,EAazD,OAV2BE,OAAOC,OAAOxG,GAAsByG,QAAO,SAACC,EAAGC,GACxE,IAAMC,EAAQC,KAAKC,IAAIJ,EAAIJ,GACrBS,EAAQF,KAAKC,IAAIH,EAAIL,GAE3B,OAAIM,IAAUG,EACLL,EAAIC,EAAID,EAAIC,EAEdI,EAAQH,EAAQD,EAAID,MAI3B,KAAK,EACH,MAAO,SACT,KAAK,KACH,MAAO,OACT,KAAK,IACH,MAAO,MACT,KAAK,EACH,MAAO,SACT,QACE,MAAO,UAYMM,CACjB3E,EAAiBqC,EAAoB2B,qBAAuBvE,EAAiBuE,qBAC7EhE,EAAiBqC,EAAoB0B,WAAatE,EAAiBsE,WACnEtE,EAAiBmF,eDvYa,ICyY1B9D,EAAWd,EAAiBqC,EAAoBvB,SAAWrB,EAAiBqB,SAE5E+D,EAActC,IAAgBuC,IAAMC,MACpCC,GA1VkChK,EA0VayE,EAAiBzE,OArV/D,IAAIwB,OAAOuB,KAAKkH,YAAYC,MACjClK,EAAMmK,EACNnK,EAAMoK,EACNpK,EAAMsJ,EACN,GAPO,IAAI9H,OAAOuB,KAAKkH,YAAYC,MAAM,EAAG,EAAG,EAAG,GAyV9CG,EAAqBR,EAAyC,wBAA3BG,EAAYlB,WAAkE,kBAA3BkB,EAAYlB,WAElGwB,GAA6B,SAAC7F,GAClC,MAGIA,EAAiB8F,oBAAsB9F,EAFzCkE,EAAS,EAATA,UACO6B,EAAY,EAAnBxK,MAGEyK,EAAc,cAClB,IAAK9B,IAAc6B,EACjB,OAAOC,EAGT,IAAMxG,EAAW,GAAH,OAAM0E,EAAS,MACzB3I,EAAQ,UAkBZ,OAjBIA,IACFA,EAAQ0K,YACNF,EAAaL,EACbK,EAAaJ,EACbI,EAAalB,GACbqB,MAAM,GAAI,IAGdzB,OAAO0B,KAAK5G,IAAyBnH,SAAQ,SAACqF,GAE1C8B,GAAwB9B,GAAO+B,WAAaA,GAC5CD,GAAwB9B,GAAOlC,QAAUA,IAEzCyK,EAAcvI,MAIXuI,GAGT,OAAO9J,EACL,kBAACiB,EAAA,EAAkB,CACjBwD,YAAayB,IAAYC,2BACzBpH,UAAU,wBAEV,kBAAC,IAAO,CACNmL,QAAM,EACNxJ,SAAU,YAAgB,IAAbwJ,EAAM,EAANA,OACXnD,EAAkBmD,EAAOC,UAG1B,gBAAGC,EAAU,EAAVA,WAAU,OACZ,yBACErL,UAAU,qCACVyC,IAAK4I,GAEL,kBAAC,IAAO,CACNF,QAAM,EACNxJ,SAAU,YAAgB,IAAbwJ,EAAM,EAANA,OACa,IAAvBlD,GAA6BC,EAAsBiD,EAAOC,UAG5D,gBAAGC,EAAU,EAAVA,WAAU,OACZ,yBACErL,UAAU,cACVyC,IAAK4I,GAEL,kBAAC3E,EAAA,EAAQ,CACP4E,MAAO9B,OAAO0B,KAAK5G,IACnBiH,SAAU,kBAAMjD,GAAiB,IACjCzB,YAAa,SAAC2E,GACZ,IAAMT,EAAczG,GAAwBkH,GACtCtB,EAAgBuB,SAASV,EAAYxG,SAAU,IAC/CmH,EAAY,IAAI5J,OAAOuB,KAAKkH,YAAYC,MAAMO,EAAYzK,OAQ1DqL,EAAe,CACnBlG,MAAM,EACNE,QAAQ,EACRC,WAAW,EACXqD,UAAWiB,EACX5J,MAZsB,CACtBmK,EAAGiB,EAAUE,EACblB,EAAGgB,EAAUG,EACbjC,EAAG8B,EAAUI,EACbnC,EAAG,MAWLtK,IAAKC,kBAAkB0G,qBAAqB,CAC1C+F,UAAWJ,IAEbtM,IAAKC,kBAAkBkG,eAAemG,GAGtCK,YAAW,WAET3M,IAAKuF,mBAAmBC,WAE1BxF,IAAK4G,oBAAoBC,kBAE3B+F,mBAAoB,SAACT,GAAI,cAAWlH,GAAwBkH,IAAK,IAAEU,QAAS,YAAa5L,MAAO,oBAChG6L,0BAA0B,EAC1BC,oBAAqBxB,GAA2B7F,GAChD/E,UAAU,iBACV0F,YAAY,8BAEd,kBAACgB,EAAA,EAAQ,CACP4E,MAAO1D,EACP2D,SAAU,kBAAMjD,GAAiB,IACjCzB,YAAa,SAACgC,GACZxJ,IAAKC,kBAAkBgG,kBAAoBjG,IAAKC,kBAAkB+M,qBAAqB,CAAExD,aAEzFxJ,IAAKC,kBAAkBkG,eAAe,CAAEqD,aAGxCmD,YAAW,WAET3M,IAAKuF,mBAAmBC,YAG5BoH,mBAAoB,SAACT,GAAI,YAAW1D,EAAc0D,KAClDc,UAAW,IACXC,oBAAqB,SAACC,GAAI,OAAK5E,EAAmBkB,SAAS0D,IAC3DxM,UAAU,iBACV0F,YAAY,qBACZ0G,oBAAqBvD,EACrB4D,UAAQ,IAEV,kBAAC/F,EAAA,EAAQ,CACP4E,MAAO9G,GACP+G,SAAU,kBAAMjD,GAAiB,IACjCzB,YAAa,SAACoC,GACZ,IAAIiB,EAAgBuB,SAASxC,EAAW,IAEpCyD,MAAMxC,KACRA,EDhhBU,ICshBRA,EAAgB,KAClBA,EAAgB,IAGd7K,IAAKC,kBAAkBgG,kBACzBjG,IAAKC,kBAAkB+M,qBAAqB,CAC1CpD,UAAWiB,IAIf7K,IAAKC,kBAAkBkG,eAAe,CACpCyD,UAAWiB,IAIb8B,YAAW,WAET3M,IAAKuF,mBAAmBC,YAG5BuH,oBAAqBlD,EACrBlJ,UAAU,iBACV0F,YAAY,0BACZ+G,UAAQ,EACRE,iBAAiB,IAEjBxE,GAAqB,GACrB,oCACE,yBAAKnI,UAAU,YACf,kBAAC,GAAU,CACT+E,iBAAkBA,EAClBC,OAAQA,EACRC,SAAUA,EACVC,YAAaA,KAInB,yBAAKlF,UAAU,YACf,kBAAC4M,EAAA,EAAmB,CAClBvH,QAAS,kBAAMiD,GAAiB,IAChC5C,YAAY,kBACZhG,MAAM,yBACNgE,IAAI,4BACJmJ,QAAQ,qBACRvM,MAAOgK,EAAYlB,WACnB0D,cAAenC,EAAqB,cAAgB,KAEtD,kBAAC,EAAkB,CACjBpK,cAAe,SAACwM,EAAGzM,GACjB,IAAMoL,EAAY,CAChBjB,EAAGnK,EAAMsL,EACTlB,EAAGpK,EAAMuL,EACTjC,EAAGtJ,EAAMwL,EACTnC,EAAG,KAGLtK,IAAKC,kBAAkBgG,kBAAoBjG,IAAKC,kBAAkB+M,qBAAqB,CAAEX,cAEzFrM,IAAKC,kBAAkBkG,eAAe,CAAEkG,cAExChN,EAASM,IAAQyC,cAAc,CAAC,wBAGhCpC,IAAKuF,mBAAmBC,SAE1BvE,MAAOgK,IAEPnC,GAAqB,GACrB,oCACE,yBAAKnI,UAAU,YACf,kBAAC,GAAoB,CAAC+F,cAAeA,KAGzC,yBAAK/F,UAAU,YACf,kBAAC0G,EAAA,EAAQ,CACP4E,MAAO9B,OAAO0B,KAAKjI,GACnB4D,YAAa,SAACmG,GACZ,IAAMzD,EAActG,EAAqB+J,GACzC3N,IAAKC,kBAAkB0G,qBAAqB,CAC1C,qBAAwBuD,IAE1BlK,IAAKC,kBAAkBkG,eAAe,CACpC6D,eAIFhK,IAAKuF,mBAAmBC,QACxBxF,IAAK4G,oBAAoBC,kBAE3BkG,oBAAqB/C,EACrBrJ,UAAU,uCACV0F,YAAY,6BACZuH,cAAe,SAAChM,GAAM,OACpB,kBAACkE,EAAA,EAAY,CACXzF,MAAM,2BACNgE,IAAI,kCACJ0B,SAAUnE,EACVoE,QAAS,kBAAMiD,GAAiB,SAItC,yBAAKtI,UAAU,YACf,oCACE,kBAACmF,EAAA,EAAY,CACXnF,UAAU,oBACV0F,YAAayB,IAAY+F,wCACzBxN,MAAM,2BACNgE,IAAI,uBACJ2B,QAAS8H,IAEX,kBAAC,EAAkC,OAEb,IAAtBhF,GACA,oCACE,yBAAKnI,UAAU,YACf,kBAAC,GAAW,CAACoG,SAAUA,KAGzB+B,EAAoB,GACpB,oCACE,yBAAKnI,UAAU,YACf,yBAAKA,UAAU,yBACb,kBAACmF,EAAA,EAAY,CACXnF,UAAU,oBACVoF,SAAUiD,EACV3C,YAAY,2BACZhG,MAAM,cACNgE,IAAI,2BACJ2B,QAAS,kBAAMiD,GAAkBD,MAElCA,GACC,yBAAKrI,UAAU,iDACb,yBAAKA,UAAU,eACXmI,EAAoB,GACpB,oCACE,kBAAC,GAAU,CACTpD,iBAAkBA,EAClBC,OAAQA,EACRC,SAAUA,EACVC,YAAaA,IAEf,yBAAKlF,UAAU,aAGjBmI,EAAoB,GACpB,oCACE,kBAAC,GAAoB,CAACpC,cAAeA,IACrC,yBAAK/F,UAAU,aAGjBmI,EAAoB,GACpB,kBAAC,GAAW,CAAC/B,SAAUA,iBAejD","file":"chunks/25.chunk.js","sourcesContent":["var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./ColorPickerOverlay.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\n                if (webComponents.length > 0) {\n                  const clonedStyleTags = [];\n                  for (let i = 0; i < webComponents.length; i++) {\n                    const webComponent = webComponents[i];\n                    if (i === 0) {\n                      webComponent.shadowRoot.appendChild(styleTag);\n                      styleTag.onload = function () {\n                        if (clonedStyleTags.length > 0) {\n                          clonedStyleTags.forEach((styleNode) => {\n                            // eslint-disable-next-line no-unsanitized/property\n                            styleNode.innerHTML = styleTag.innerHTML;\n                          });\n                        }\n                      };\n                    } else {\n                      const styleNode = styleTag.cloneNode(true);\n                      webComponent.shadowRoot.appendChild(styleNode);\n                      clonedStyleTags.push(styleNode);\n                    }\n                  }\n                } else {\n                  document.head.appendChild(styleTag);\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".open.ColorPickerOverlay{visibility:visible}.closed.ColorPickerOverlay{visibility:hidden}:host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.ColorPickerOverlay{position:absolute;z-index:70;justify-content:center;align-items:center}.ColorPickerOverlay:empty{padding:0}.ColorPickerOverlay .buttons{display:flex}.ColorPickerOverlay .Button{margin:4px;width:32px;height:32px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ColorPickerOverlay .Button{width:42px;height:42px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ColorPickerOverlay .Button{width:42px;height:42px}}.ColorPickerOverlay .Button:hover{background:var(--popup-button-hover)}.ColorPickerOverlay .Button .Icon{width:18px;height:18px}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .ColorPickerOverlay .Button .Icon{width:24px;height:24px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .ColorPickerOverlay .Button .Icon{width:24px;height:24px}}.is-vertical.ColorPickerOverlay .Button.main-menu-button{width:100%;border-radius:0;justify-content:flex-start;padding-left:var(--padding-small);padding-right:var(--padding-small);margin:0 0 var(--padding-tiny) 0}.is-vertical.ColorPickerOverlay .Button.main-menu-button:first-child{margin-top:var(--padding-tiny)}@media(max-width:640px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .is-vertical.ColorPickerOverlay .Button.main-menu-button{width:100%;height:32px}}@container (max-width: 640px){.App.is-web-component:not(.is-in-desktop-only-mode) .is-vertical.ColorPickerOverlay .Button.main-menu-button{width:100%;height:32px}}.is-vertical.ColorPickerOverlay .Button.main-menu-button .Icon{margin-right:10px}.is-vertical.ColorPickerOverlay .Button.main-menu-button span{white-space:nowrap}@-webkit-keyframes bottom-up{0%{transform:translateY(100%)}to{transform:translateY(0)}}@keyframes bottom-up{0%{transform:translateY(100%)}to{transform:translateY(0)}}@-webkit-keyframes up-bottom{0%{transform:translateY(0)}to{transform:translateY(100%)}}@keyframes up-bottom{0%{transform:translateY(0)}to{transform:translateY(100%)}}.ColorPickerOverlay{border-radius:4px;box-shadow:0 0 3px 0 var(--document-box-shadow);background:var(--component-background);display:flex;flex-direction:column;padding:16px}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","var api = require(\"!../../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../../node_modules/css-loader/index.js!../../../../../node_modules/postcss-loader/src/index.js??postcss!../../../../../node_modules/sass-loader/dist/cjs.js!./OfficeHeader.scss\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function (styleTag) {\n                const webComponents = document.getElementsByTagName('apryse-webviewer');\n                if (webComponents.length > 0) {\n                  const clonedStyleTags = [];\n                  for (let i = 0; i < webComponents.length; i++) {\n                    const webComponent = webComponents[i];\n                    if (i === 0) {\n                      webComponent.shadowRoot.appendChild(styleTag);\n                      styleTag.onload = function () {\n                        if (clonedStyleTags.length > 0) {\n                          clonedStyleTags.forEach((styleNode) => {\n                            // eslint-disable-next-line no-unsanitized/property\n                            styleNode.innerHTML = styleTag.innerHTML;\n                          });\n                        }\n                      };\n                    } else {\n                      const styleNode = styleTag.cloneNode(true);\n                      webComponent.shadowRoot.appendChild(styleNode);\n                      clonedStyleTags.push(styleNode);\n                    }\n                  }\n                } else {\n                  document.head.appendChild(styleTag);\n                }\n              };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \":host{display:inline-block;container-type:inline-size;width:100%;height:100%;overflow:hidden}@media(min-width:901px){.App:not(.is-web-component) .hide-in-desktop{display:none}}@container (min-width: 901px){.hide-in-desktop{display:none}}@media(min-width:641px)and (max-width:900px){.App:not(.is-in-desktop-only-mode):not(.is-web-component) .hide-in-tablet{display:none}}@container (min-width: 641px) and (max-width: 900px){.App.is-web-component:not(.is-in-desktop-only-mode) .hide-in-tablet{display:none}}@media(max-width:640px)and (min-width:431px){.App:not(.is-web-component) .hide-in-mobile{display:none}}@container (max-width: 640px) and (min-width: 431px){.App.is-web-component .hide-in-mobile{display:none}}@media(max-width:430px){.App:not(.is-web-component) .hide-in-small-mobile{display:none}}@container (max-width: 430px){.App.is-web-component .hide-in-small-mobile{display:none}}.always-hide{display:none}.MainHeader.OfficeEditorTools{padding:0 8px;align-items:center;flex-direction:row}.MainHeader.OfficeEditorTools .HeaderItems{width:auto}.MainHeader.OfficeEditorTools .HeaderItems .Dropdown{margin-left:8px}.MainHeader.OfficeEditorTools .HeaderItems .Dropdown.small-dropdown{width:80px!important}.MainHeader.OfficeEditorTools .HeaderItems .Dropdown.large-dropdown{width:160px!important}.MainHeader.OfficeEditorTools .HeaderItems .Dropdown .picked-option{text-align:left}.MainHeader.OfficeEditorTools .HeaderItems .line-spacing-dropdown .Dropdown__items{top:40px}.MainHeader.OfficeEditorTools .HeaderItems .action-button-wrapper{display:flex;align-items:center;position:relative}.MainHeader.OfficeEditorTools .HeaderItems .action-button-wrapper .more-tools{position:absolute;top:46px;right:6px;width:auto;padding:0}.MainHeader.OfficeEditorTools .Button .Icon svg{vertical-align:middle}.MainHeader.OfficeEditorTools .list-style-button{margin-right:0!important}.MainHeader.OfficeEditorTools .list-style-dropdown{background:transparent;border:none;width:12px!important;height:32px!important;margin-left:0!important;z-index:0}.MainHeader.OfficeEditorTools .list-style-dropdown.Dropdown__wrapper:hover{border-radius:4px;background:var(--tools-button-hover)}.MainHeader.OfficeEditorTools .list-style-dropdown .Dropdown{padding:0}.MainHeader.OfficeEditorTools .list-style-dropdown .Dropdown svg rect{stroke:none}.MainHeader.OfficeEditorTools .list-style-dropdown .picked-option-text{display:none}.MainHeader.OfficeEditorTools .list-style-dropdown .arrow{padding-left:0}.MainHeader.OfficeEditorTools .list-style-dropdown .Dropdown__items{overflow:hidden}.MainHeader.OfficeEditorTools .list-style-dropdown .Dropdown__items .Dropdown__item{height:74px!important;padding:15px 0;margin:3px;cursor:pointer}.MainHeader.OfficeEditorTools .list-style-dropdown .Dropdown__items .Dropdown__item .officeEditor-list-style-icon{width:60px!important;height:74px!important}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"LEFT_HEADER_WIDTH\": \"41px\",\n\t\"RIGHT_HEADER_WIDTH\": \"41px\"\n};","import React from 'react';\nimport actions from 'actions';\nimport { useDispatch } from 'react-redux';\nimport getRootNode from 'helpers/getRootNode';\nimport core from 'core';\nimport DataElements from 'constants/dataElement';\n\nimport '../FilePickerHandler/FilePickerHandler.scss';\n\n// TODO: Can we accept any other image formats?\nconst ACCEPTED_FORMATS = ['jpg', 'jpeg', 'png', 'bmp'].map(\n  (format) => `.${format}`,\n).join(', ');\n\nconst toBase64 = (file) => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n  reader.onload = () => resolve(reader.result);\n  reader.onerror = reject;\n});\n\nconst FilePickerHandler = () => {\n  const dispatch = useDispatch();\n\n  const openDocument = async (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      try {\n        dispatch(actions.openElement(DataElements.LOADING_MODAL));\n        const base64 = await toBase64(file);\n        await core.getOfficeEditor().insertImageAtCursor(base64);\n        dispatch(actions.closeElement(DataElements.LOADING_MODAL));\n      } catch (error) {\n        dispatch(actions.closeElement(DataElements.LOADING_MODAL));\n        dispatch(actions.showWarningMessage({\n          title: 'Error',\n          message: error.message,\n        }));\n      }\n      const picker = getRootNode().querySelector('#office-editor-file-picker');\n      if (picker) {\n        picker.value = '';\n      }\n    }\n  };\n\n  return (\n    <div className=\"FilePickerHandler\">\n      <input\n        id=\"office-editor-file-picker\"\n        type=\"file\"\n        accept={ACCEPTED_FORMATS}\n        onChange={openDocument}\n      />\n    </div>\n  );\n};\n\nexport default FilePickerHandler;\n","import OfficeEditorImageFilePickerHandler from './OfficeEditorImageFilePickerHandler';\n\nexport default OfficeEditorImageFilePickerHandler;\n","import React, { useState, useLayoutEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createPortal } from 'react-dom';\nimport selectors from 'selectors';\nimport DataElementWrapper from 'components/DataElementWrapper';\nimport ColorPalette from 'components/ColorPalette';\nimport ColorPalettePicker from 'components/ColorPalettePicker';\nimport actions from 'actions';\n\nimport useOnClickOutside from 'hooks/useOnClickOutside';\nimport getOverlayPositionBasedOn from 'helpers/getOverlayPositionBasedOn';\nimport classNames from 'classnames';\nimport getRootNode from 'helpers/getRootNode';\n\nimport './ColorPickerOverlay.scss';\n\nconst ColorPickerOverlay = ({\n  color,\n  onStyleChange,\n  portalElementId = 'app',\n}) => {\n  const [position, setPosition] = useState(() => ({ left: '555px', right: 'auto', top: 'auto' }));\n  const overlayRef = useRef(null);\n  const [\n    isOpen,\n  ] = useSelector((state) => [\n    selectors.isElementOpen(state, 'colorPickerOverlay'),\n  ]);\n\n  const dispatch = useDispatch();\n\n  const onClickOutside = (e) => {\n    const menuButton = document.querySelector('[data-element=\"textColorButton\"]');\n    const clickedMenuButton = menuButton?.contains(e.target);\n    if (!clickedMenuButton) {\n      dispatch(actions.closeElements(['colorPickerOverlay']));\n    }\n  };\n  useOnClickOutside(overlayRef, onClickOutside);\n\n  useLayoutEffect(() => {\n    if (isOpen) {\n      const onResize = () => {\n        const overlayPosition = getOverlayPositionBasedOn('textColorButton', overlayRef);\n        setPosition(overlayPosition);\n      };\n      onResize();\n\n      window.addEventListener('resize', onResize);\n      return () => window.removeEventListener('resize', onResize);\n    }\n  }, [isOpen]);\n\n  return createPortal(\n    <DataElementWrapper\n      data-element='colorPickerOverlay'\n      className={classNames({\n        ColorPickerOverlay: true,\n        Popup: true,\n        open: isOpen,\n        closed: !isOpen\n      })}\n      style={position}\n      ref={overlayRef}\n    >\n      <ColorPalette\n        color={color}\n        property='TextColor'\n        onStyleChange={onStyleChange}\n        useMobileMinMaxWidth\n      />\n      <ColorPalettePicker\n        color={color}\n        onStyleChange={onStyleChange}\n        enableEdit\n      />\n    </DataElementWrapper>,\n    getRootNode().getElementById(portalElementId),\n  );\n};\n\nexport default ColorPickerOverlay;","import ColorPickerOverlay from './ColorPickerOverlay';\n\nexport default ColorPickerOverlay;","import getRootNode from 'helpers/getRootNode';\n\nexport default () => {\n  getRootNode().querySelector('#office-editor-file-picker')?.click();\n};\n","export const LINE_SPACING_OPTIONS = {\n  'Single': 1,\n  '1.15': 1.15,\n  '1.5': 1.5,\n  'Double': 2,\n};\n\nexport const JUSTIFICATION_OPTIONS = {\n  Left: 'left',\n  Center: 'center',\n  Right: 'right',\n  Both: 'both'\n};\n\nexport const LIST_OPTIONS = {\n  Ordered: 'ordered',\n  Unordered: 'unordered',\n};\n\nexport const DEFAULT_POINT_SIZE = 11;\n\nconst OfficeEditorListStylePresets = window.Core.Document.OfficeEditorListStylePresets;\nexport const OFFICE_BULLET_OPTIONS = [\n  { enum: OfficeEditorListStylePresets.BULLET, img: 'icon-office-editor-list-style-bullet' },\n  { enum: OfficeEditorListStylePresets.BULLET_SQUARE, img: 'icon-office-editor-list-style-square' },\n  { enum: OfficeEditorListStylePresets.SQUARE_BULLET, img: 'icon-office-editor-list-style-square-bullet' },\n  { enum: OfficeEditorListStylePresets.DIAMOND, img: 'icon-office-editor-list-style-diamond' },\n  { enum: OfficeEditorListStylePresets.CHECK, img: 'icon-office-editor-list-style-check' },\n  { enum: OfficeEditorListStylePresets.ARROW, img: 'icon-office-editor-list-style-arrow' },\n];\n\nexport const OFFICE_NUMBER_OPTIONS = [\n  { enum: OfficeEditorListStylePresets.NUMBER_LATIN_ROMAN_1, img: 'icon-office-editor-list-style-number-latin-1' },\n  { enum: OfficeEditorListStylePresets.NUMBER_DECIMAL, img: 'icon-office-editor-list-style-number-decimal' },\n  { enum: OfficeEditorListStylePresets.NUMBER_LATIN_ROMAN_2, img: 'icon-office-editor-list-style-number-latin-2' },\n  { enum: OfficeEditorListStylePresets.LATIN_ROMAN, img: 'icon-office-editor-list-style-latin-roman' },\n  { enum: OfficeEditorListStylePresets.ROMAN_LATIN_NUMBER, img: 'icon-office-editor-list-style-roman-latin' },\n];\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux';\nimport Dropdown from 'components/Dropdown';\nimport ActionButton from 'components/ActionButton';\nimport ToggleElementButton from 'components/ToggleElementButton';\nimport DataElementWrapper from 'components/DataElementWrapper';\nimport OfficeEditorImageFilePickerHandler from 'components/OfficeEditorImageFilePickerHandler';\nimport DataElement from 'constants/dataElement';\nimport actions from 'actions';\nimport core from 'core';\nimport selectors from 'selectors';\nimport ColorPickerOverlay from 'components/ColorPickerOverlay';\nimport { rgbaToHex } from 'src/helpers/color';\nimport openOfficeEditorFilePicker from 'helpers/openOfficeEditorFilePicker';\nimport Theme from 'src/constants/theme';\nimport {\n  LINE_SPACING_OPTIONS,\n  JUSTIFICATION_OPTIONS,\n  LIST_OPTIONS,\n  DEFAULT_POINT_SIZE,\n  OFFICE_BULLET_OPTIONS,\n  OFFICE_NUMBER_OPTIONS\n} from 'src/constants/officeEditor';\nimport Measure from 'react-measure';\n\nimport { isSafari, isIOS } from 'helpers/device';\n\nimport './Header.scss';\nimport './OfficeHeader.scss';\n\nconst availableStylePresetMap = {\n  'Normal Text': {\n    fontSize: '11pt',\n    color: '#000000',\n  },\n  'Title': {\n    fontSize: '26pt',\n    color: '#000000',\n  },\n  'Subtitle': {\n    fontSize: '15pt',\n    color: '#666666',\n  },\n  'Heading 1': {\n    fontSize: '20pt',\n    color: '#000000',\n  },\n  'Heading 2': {\n    fontSize: '16pt',\n    color: '#000000',\n  },\n  'Heading 3': {\n    fontSize: '14pt',\n    color: '#434343',\n  },\n  'Heading 4': {\n    fontSize: '12pt',\n    color: '#666666',\n  },\n  'Heading 5': {\n    fontSize: '11pt',\n    color: '#666666',\n  },\n};\nconst availablePointSizes = ['8', '9', '10', '11', '12', '14', '18', '24', '30', '36', '48', '60', '72'];\nconst listOptionsWidth = 121;\nconst justificationOptionsWidth = 209;\nconst moreButtonWidth = 77;\n\nconst convertCoreColorToWebViewerColor = (color) => {\n  if (!color) {\n    return new window.Core.Annotations.Color(0, 0, 0, 1);\n  }\n\n  return new window.Core.Annotations.Color(\n    color.r,\n    color.g,\n    color.b,\n    1,\n  );\n};\n\nconst focusContent = () => {\n  // On safari, focusing the viewer element makes the screen jump up.\n  // So the toolbars disappear.\n  if (isSafari || isIOS) {\n    return;\n  }\n  // focus so that after clicking you can still input text\n  core.getViewerElement().focus();\n};\n\nconst TextStyles = ({ cursorProperties, isBold, isItalic, isUnderline }) => {\n  return (\n    <>\n      <ActionButton\n        isActive={isBold}\n        onClick={() => {\n          if (core.getOfficeEditor().isTextSelected()) {\n            core.getOfficeEditor().toggleSelectedTextStyle('bold');\n          } else {\n            core.getOfficeEditor().setCursorStyle({ bold: !cursorProperties.bold });\n          }\n          focusContent();\n        }}\n        dataElement='office-editor-bold'\n        title='officeEditor.bold'\n        img='icon-text-bold'\n      />\n      <ActionButton\n        isActive={isItalic}\n        onClick={() => {\n          if (core.getOfficeEditor().isTextSelected()) {\n            core.getOfficeEditor().toggleSelectedTextStyle('italic');\n          } else {\n            core.getOfficeEditor().setCursorStyle({ italic: !cursorProperties.italic });\n          }\n          focusContent();\n        }}\n        dataElement='office-editor-italic'\n        title='officeEditor.italic'\n        img='icon-text-italic'\n      />\n      <ActionButton\n        isActive={isUnderline}\n        onClick={() => {\n          if (core.getOfficeEditor().isTextSelected()) {\n            core.getOfficeEditor().toggleSelectedTextStyle('underline');\n          } else {\n            core.getOfficeEditor().setCursorStyle({\n              underline: cursorProperties.underlineStyle === 'none'\n            });\n          }\n          focusContent();\n        }}\n        dataElement='office-editor-underline'\n        title='officeEditor.underline'\n        img='icon-text-underline'\n      />\n    </>\n  );\n};\n\nconst JustificationOptions = ({ justification }) => {\n  return (\n    <>\n      <ActionButton\n        isActive={justification === JUSTIFICATION_OPTIONS.Left}\n        dataElement='office-editor-left-align'\n        title='officeEditor.leftAlign'\n        img='icon-menu-left-align'\n        onClick={() => {\n          core.getOfficeEditor().updateParagraphStyle({\n            justification: 'left'\n          });\n          core.getOfficeEditor().setCursorStyle({\n            justification: 'left'\n          });\n\n          focusContent();\n          core.getDocumentViewer().clearSelection();\n        }}\n      />\n      <ActionButton\n        isActive={justification === JUSTIFICATION_OPTIONS.Center}\n        dataElement='office-editor-center-align'\n        title='officeEditor.centerAlign'\n        img='icon-menu-centre-align'\n        onClick={() => {\n          core.getOfficeEditor().updateParagraphStyle({\n            justification: 'center'\n          });\n          core.getOfficeEditor().setCursorStyle({\n            justification: 'center'\n          });\n\n          focusContent();\n          core.getDocumentViewer().clearSelection();\n        }}\n      />\n      <ActionButton\n        isActive={justification === JUSTIFICATION_OPTIONS.Right}\n        dataElement='office-editor-right-align'\n        title='officeEditor.rightAlign'\n        img='icon-menu-right-align'\n        onClick={() => {\n          core.getOfficeEditor().updateParagraphStyle({\n            justification: 'right'\n          });\n          core.getOfficeEditor().setCursorStyle({\n            justification: 'right'\n          });\n\n          focusContent();\n          core.getDocumentViewer().clearSelection();\n        }}\n      />\n      <ActionButton\n        isActive={justification === JUSTIFICATION_OPTIONS.Both}\n        dataElement='office-editor-justify'\n        title='officeEditor.justify'\n        img='icon-menu-both-align'\n        onClick={() => {\n          core.getOfficeEditor().updateParagraphStyle({\n            justification: 'both'\n          });\n          core.getOfficeEditor().setCursorStyle({\n            justification: 'both'\n          });\n\n          focusContent();\n          core.getDocumentViewer().clearSelection();\n        }}\n      />\n    </>\n  );\n};\n\nconst ListOptions = ({ listType }) => {\n  const bulletListObjects = OFFICE_BULLET_OPTIONS.map((options) => ({\n    className: 'officeEditor-list-style-icon',\n    key: options.enum,\n    src: options.img\n  }));\n\n  const numberListOptions = OFFICE_NUMBER_OPTIONS.map((options) => ({\n    className: 'officeEditor-list-style-icon',\n    key: options.enum,\n    src: options.img\n  }));\n\n  return (\n    <>\n      <ActionButton\n        isActive={listType === LIST_OPTIONS.Unordered}\n        dataElement='office-editor-bullet-list'\n        title='officeEditor.bulletList'\n        img='icon-office-editor-bullet-list'\n        className='list-style-button'\n        onClick={() => {\n          core.getOfficeEditor().toggleListSelection(LIST_OPTIONS.Unordered);\n          focusContent();\n        }}\n      />\n      <Dropdown\n        dataElement='office-editor-bullet-list-dropdown'\n        images={bulletListObjects}\n        columns={3}\n        onClickItem={(val) => {\n          core.getOfficeEditor().setListPreset(val);\n        }}\n        className={'list-style-dropdown'}\n      />\n      <ActionButton\n        isActive={listType === LIST_OPTIONS.Ordered}\n        dataElement='office-editor-number-list'\n        title='officeEditor.numberList'\n        img='icon-office-number-list'\n        className='list-style-button'\n        onClick={() => {\n          core.getOfficeEditor().toggleListSelection(LIST_OPTIONS.Ordered);\n          focusContent();\n        }}\n      />\n      <Dropdown\n        dataElement='office-editor-number-list-dropdown'\n        images={numberListOptions}\n        columns={3}\n        onClickItem={(val) => {\n          core.getOfficeEditor().setListPreset(val);\n        }}\n        className={'list-style-dropdown'}\n      />\n      <ActionButton\n        dataElement='office-editor-decrease-indent'\n        title='officeEditor.decreaseIndent'\n        img='ic-indent-decrease'\n        onClick={async () => {\n          await core.getOfficeEditor().decreaseIndent();\n          focusContent();\n        }}\n      />\n      <ActionButton\n        dataElement='office-editor-increase-indent'\n        title='officeEditor.increaseIndent'\n        img='ic-indent-increase'\n        onClick={async () => {\n          await core.getOfficeEditor().increaseIndent();\n          focusContent();\n        }}\n      />\n    </>\n  );\n};\n\nconst OfficeEditorToolsHeader = () => {\n  const dispatch = useDispatch();\n  const [\n    isOpen,\n    cursorProperties,\n    selectionProperties,\n    availableFontFaces,\n    activeTheme,\n    cssFontValues,\n  ] = useSelector(\n    (state) => [\n      selectors.isElementOpen(state, DataElement.OFFICE_EDITOR_TOOLS_HEADER),\n      selectors.getOfficeEditorCursorProperties(state),\n      selectors.getOfficeEditorSelectionProperties(state),\n      selectors.getAvailableFontFaces(state),\n      selectors.getActiveTheme(state),\n      selectors.getCSSFontValues(state),\n    ],\n    shallowEqual\n  );\n\n  const [containerWidth, setContainerWidth] = useState(0);\n  const [initialHeaderWidth, setInitialHeaderWidth] = useState(0);\n  const [visibleGroupCount, setVisibleGroupCount] = useState(6);\n  const [showMoreTools, setShowMoreTools] = useState(false);\n\n  useEffect(() => {\n    const onCursorPropertiesUpdated = (cursorProperties) => {\n      dispatch(actions.setOfficeEditorCursorProperties(cursorProperties));\n    };\n    const onSelectionPropertiesUpdated = (selectionProperties) => {\n      dispatch(actions.setOfficeEditorSelectionProperties(selectionProperties));\n    };\n\n    core.getDocument()?.addEventListener('cursorPropertiesUpdated', onCursorPropertiesUpdated);\n    core.getDocument()?.addEventListener('selectionPropertiesUpdated', onSelectionPropertiesUpdated);\n\n    return () => {\n      core.getDocument()?.removeEventListener('selectionPropertiesUpdated', onSelectionPropertiesUpdated);\n      core.getDocument()?.removeEventListener('cursorPropertiesUpdated', onCursorPropertiesUpdated);\n    };\n  }, []);\n\n  useEffect(() => {\n    if (cursorProperties.fontFace && !availableFontFaces.includes(cursorProperties.fontFace)) {\n      dispatch(actions.addOfficeEditorAvailableFontFace(cursorProperties.fontFace));\n    }\n  }, [availableFontFaces, cursorProperties]);\n\n  useEffect(() => {\n    if (containerWidth === 0 || initialHeaderWidth === 0) {\n      return;\n    }\n\n    const actualContainerWidth = containerWidth - 16;\n    if (\n      actualContainerWidth >= initialHeaderWidth\n    ) {\n      setVisibleGroupCount(6);\n    } else if (\n      actualContainerWidth < initialHeaderWidth &&\n      actualContainerWidth >= (initialHeaderWidth - listOptionsWidth + moreButtonWidth)\n    ) {\n      setVisibleGroupCount(5);\n    } else if (\n      actualContainerWidth < (initialHeaderWidth - listOptionsWidth + moreButtonWidth) &&\n      actualContainerWidth >= (initialHeaderWidth - listOptionsWidth - justificationOptionsWidth + moreButtonWidth) &&\n      actualContainerWidth >= 858 // HeaderItems's width when on small devices (screen width < 900px)\n    ) {\n      setVisibleGroupCount(4);\n    } else {\n      setVisibleGroupCount(3);\n    }\n  }, [containerWidth, initialHeaderWidth]);\n\n  const calculateLineSpacing = (lineHeightMultiplier, lineHeight, fontSize) => {\n    // if lineHeight is provided, it takes precedence, because the rule sets the line height in points (either exact or at least)\n    const lineSpacing = lineHeight ? lineHeight / fontSize : lineHeightMultiplier;\n\n    // Sometimes we get floating points so we locate the closest line spacing option\n    const roundedLineSpacing = Object.values(LINE_SPACING_OPTIONS).reduce((a, b) => {\n      const aDiff = Math.abs(a - lineSpacing);\n      const bDiff = Math.abs(b - lineSpacing);\n\n      if (aDiff === bDiff) {\n        return a < b ? a : b;\n      }\n      return bDiff < aDiff ? b : a;\n    });\n\n    switch (roundedLineSpacing) {\n      case 1:\n        return 'Single';\n      case 1.15:\n        return '1.15';\n      case 1.5:\n        return '1.5';\n      case 2:\n        return 'Double';\n      default:\n        return 'Single';\n    }\n  };\n\n  const isTextSelected = core.getOfficeEditor().isTextSelected();\n  const isBold = isTextSelected ? selectionProperties.bold : cursorProperties.bold;\n  const isItalic = isTextSelected ? selectionProperties.italic : cursorProperties.italic;\n  const isUnderline = isTextSelected ? selectionProperties.underlineStyle === 'single' : cursorProperties.underlineStyle === 'single';\n  const fontFace = isTextSelected ? selectionProperties.fontFace : cursorProperties.fontFace;\n  const pointSize = isTextSelected ? selectionProperties.pointSize : cursorProperties.pointSize;\n  const pointSizeSelectionKey = pointSize === undefined ? undefined : pointSize.toString();\n  const justification = isTextSelected ? selectionProperties.justification : cursorProperties.justification;\n  const lineHeight = calculateLineSpacing(\n    isTextSelected ? selectionProperties.lineHeightMultiplier : cursorProperties.lineHeightMultiplier,\n    isTextSelected ? selectionProperties.lineHeight : cursorProperties.lineHeight,\n    cursorProperties.fontPointSize || DEFAULT_POINT_SIZE,\n  );\n  const listType = isTextSelected ? selectionProperties.listType : cursorProperties.listType;\n\n  const isLightMode = activeTheme === Theme.LIGHT;\n  const wvFontColor = convertCoreColorToWebViewerColor(cursorProperties.color);\n  const useColorIconBorder = isLightMode ? wvFontColor.toString() === 'rgba(255,255,255,1)' : wvFontColor.toString() === 'rgba(0,0,0,1)';\n\n  const convertCursorToStylePreset = (cursorProperties) => {\n    const {\n      pointSize,\n      color: currentColor\n    } = cursorProperties.paragraphTextStyle || cursorProperties;\n\n    let stylePreset = 'Normal Text';\n    if (!pointSize || !currentColor) {\n      return stylePreset;\n    }\n\n    const fontSize = `${pointSize}pt`;\n    let color = '#000000';\n    if (color) {\n      color = rgbaToHex(\n        currentColor.r,\n        currentColor.g,\n        currentColor.b\n      ).slice(0, -2);\n    }\n\n    Object.keys(availableStylePresetMap).forEach((style) => {\n      if (\n        availableStylePresetMap[style].fontSize === fontSize &&\n        availableStylePresetMap[style].color === color\n      ) {\n        stylePreset = style;\n      }\n    });\n\n    return stylePreset;\n  };\n\n  return isOpen ? (\n    <DataElementWrapper\n      dataElement={DataElement.OFFICE_EDITOR_TOOLS_HEADER}\n      className='HeaderToolsContainer'\n    >\n      <Measure\n        bounds\n        onResize={({ bounds }) => {\n          setContainerWidth(bounds.width);\n        }}\n      >\n        {({ measureRef }) => (\n          <div\n            className='MainHeader Tools OfficeEditorTools'\n            ref={measureRef}\n          >\n            <Measure\n              bounds\n              onResize={({ bounds }) => {\n                (initialHeaderWidth === 0) && setInitialHeaderWidth(bounds.width);\n              }}\n            >\n              {({ measureRef }) => (\n                <div\n                  className=\"HeaderItems\"\n                  ref={measureRef}\n                >\n                  <Dropdown\n                    items={Object.keys(availableStylePresetMap)}\n                    onOpened={() => setShowMoreTools(false)}\n                    onClickItem={(item) => {\n                      const stylePreset = availableStylePresetMap[item];\n                      const fontPointSize = parseInt(stylePreset.fontSize, 10);\n                      const fontColor = new window.Core.Annotations.Color(stylePreset.color);\n                      const parsedFontColor = {\n                        r: fontColor.R,\n                        g: fontColor.G,\n                        b: fontColor.B,\n                        a: 255,\n                      };\n\n                      const newTextStyle = {\n                        bold: false,\n                        italic: false,\n                        underline: false,\n                        pointSize: fontPointSize,\n                        color: parsedFontColor\n                      };\n\n                      core.getOfficeEditor().updateParagraphStyle({\n                        textStyle: newTextStyle,\n                      });\n                      core.getOfficeEditor().setCursorStyle(newTextStyle);\n\n                      // setTimeout hack needed because dropdown closing from click is async?\n                      setTimeout(() => {\n                        // focus so that after clicking you can still input text\n                        core.getViewerElement().focus();\n                      });\n                      core.getDocumentViewer().clearSelection();\n                    }}\n                    getCustomItemStyle={(item) => ({ ...availableStylePresetMap[item], padding: '20px 10px', color: 'var(--gray-12)' })}\n                    applyCustomStyleToButton={false}\n                    currentSelectionKey={convertCursorToStylePreset(cursorProperties)}\n                    className=\"large-dropdown\"\n                    dataElement=\"office-editor-text-format\"\n                  />\n                  <Dropdown\n                    items={availableFontFaces}\n                    onOpened={() => setShowMoreTools(false)}\n                    onClickItem={(fontFace) => {\n                      core.getOfficeEditor().isTextSelected() && core.getOfficeEditor().updateSelectionStyle({ fontFace });\n\n                      core.getOfficeEditor().setCursorStyle({ fontFace });\n\n                      // setTimeout hack needed because dropdown closing from click is async?\n                      setTimeout(() => {\n                        // focus so that after clicking you can still input text\n                        core.getViewerElement().focus();\n                      });\n                    }}\n                    getCustomItemStyle={(item) => ({ ...cssFontValues[item] })}\n                    maxHeight={500}\n                    customDataValidator={(font) => availableFontFaces.includes(font)}\n                    className=\"large-dropdown\"\n                    dataElement=\"office-editor-font\"\n                    currentSelectionKey={fontFace}\n                    hasInput\n                  />\n                  <Dropdown\n                    items={availablePointSizes}\n                    onOpened={() => setShowMoreTools(false)}\n                    onClickItem={(pointSize) => {\n                      let fontPointSize = parseInt(pointSize, 10);\n\n                      if (isNaN(fontPointSize)) {\n                        fontPointSize = DEFAULT_POINT_SIZE;\n                      }\n\n                      // TODO: Setting a pointsize of 96 or higher will cause cursor positions array\n                      // to be empty for the span\n                      // Actually, every large point size seems to break something.\n                      if (fontPointSize > 72) {\n                        fontPointSize = 72;\n                      }\n\n                      if (core.getOfficeEditor().isTextSelected()) {\n                        core.getOfficeEditor().updateSelectionStyle({\n                          pointSize: fontPointSize\n                        });\n                      }\n\n                      core.getOfficeEditor().setCursorStyle({\n                        pointSize: fontPointSize\n                      });\n\n                      // setTimeout hack needed because dropdown closing from click is async?\n                      setTimeout(() => {\n                        // focus so that after clicking you can still input text\n                        core.getViewerElement().focus();\n                      });\n                    }}\n                    currentSelectionKey={pointSizeSelectionKey}\n                    className=\"small-dropdown\"\n                    dataElement=\"office-editor-font-size\"\n                    hasInput\n                    isSearchEnabled={false}\n                  />\n                  {(visibleGroupCount >= 4) && (\n                    <>\n                      <div className=\"divider\" />\n                      <TextStyles\n                        cursorProperties={cursorProperties}\n                        isBold={isBold}\n                        isItalic={isItalic}\n                        isUnderline={isUnderline}\n                      />\n                    </>\n                  )}\n                  <div className=\"divider\" />\n                  <ToggleElementButton\n                    onClick={() => setShowMoreTools(false)}\n                    dataElement='textColorButton'\n                    title='officeEditor.textColor'\n                    img='icon-office-editor-circle'\n                    element='colorPickerOverlay'\n                    color={wvFontColor.toString()}\n                    iconClassName={useColorIconBorder ? 'icon-border' : ''}\n                  />\n                  <ColorPickerOverlay\n                    onStyleChange={(_, color) => {\n                      const fontColor = {\n                        r: color.R,\n                        g: color.G,\n                        b: color.B,\n                        a: 255,\n                      };\n\n                      core.getOfficeEditor().isTextSelected() && core.getOfficeEditor().updateSelectionStyle({ fontColor });\n\n                      core.getOfficeEditor().setCursorStyle({ fontColor });\n\n                      dispatch(actions.closeElements(['colorPickerOverlay']));\n\n                      // focus so that after clicking you can still input text\n                      core.getViewerElement().focus();\n                    }}\n                    color={wvFontColor}\n                  />\n                  {(visibleGroupCount >= 5) && (\n                    <>\n                      <div className=\"divider\" />\n                      <JustificationOptions justification={justification} />\n                    </>\n                  )}\n                  <div className=\"divider\" />\n                  <Dropdown\n                    items={Object.keys(LINE_SPACING_OPTIONS)}\n                    onClickItem={(lineSpacingOption) => {\n                      const lineSpacing = LINE_SPACING_OPTIONS[lineSpacingOption];\n                      core.getOfficeEditor().updateParagraphStyle({\n                        'lineHeightMultiplier': lineSpacing\n                      });\n                      core.getOfficeEditor().setCursorStyle({\n                        lineHeight,\n                      });\n\n                      // focus so that after clicking you can still input text\n                      core.getViewerElement().focus();\n                      core.getDocumentViewer().clearSelection();\n                    }}\n                    currentSelectionKey={lineHeight}\n                    className=\"small-dropdown line-spacing-dropdown\"\n                    dataElement=\"office-editor-line-spacing\"\n                    displayButton={(isOpen) => (\n                      <ActionButton\n                        title='officeEditor.lineSpacing'\n                        img='icon-office-editor-line-spacing'\n                        isActive={isOpen}\n                        onClick={() => setShowMoreTools(false)}\n                      />\n                    )}\n                  />\n                  <div className=\"divider\" />\n                  <>\n                    <ActionButton\n                      className=\"tool-group-button\"\n                      dataElement={DataElement.OFFICE_EDITOR_TOOLS_HEADER_INSERT_IMAGE}\n                      title='officeEditor.insertImage'\n                      img='icon-tool-image-line'\n                      onClick={openOfficeEditorFilePicker}\n                    />\n                    <OfficeEditorImageFilePickerHandler />\n                  </>\n                  {(visibleGroupCount === 6) && (\n                    <>\n                      <div className=\"divider\" />\n                      <ListOptions listType={listType} />\n                    </>\n                  )}\n                  {(visibleGroupCount < 6) && (\n                    <>\n                      <div className=\"divider\" />\n                      <div className=\"action-button-wrapper\">\n                        <ActionButton\n                          className=\"tool-group-button\"\n                          isActive={showMoreTools}\n                          dataElement='office-editor-more-tools'\n                          title='action.more'\n                          img='icon-tools-more-vertical'\n                          onClick={() => setShowMoreTools(!showMoreTools)}\n                        />\n                        {showMoreTools && (\n                          <div className=\"more-tools MainHeader Tools OfficeEditorTools\">\n                            <div className=\"HeaderItems\">\n                              {(visibleGroupCount < 4) && (\n                                <>\n                                  <TextStyles\n                                    cursorProperties={cursorProperties}\n                                    isBold={isBold}\n                                    isItalic={isItalic}\n                                    isUnderline={isUnderline}\n                                  />\n                                  <div className=\"divider\" />\n                                </>\n                              )}\n                              {(visibleGroupCount < 5) && (\n                                <>\n                                  <JustificationOptions justification={justification} />\n                                  <div className=\"divider\" />\n                                </>\n                              )}\n                              {(visibleGroupCount < 6) && (\n                                <ListOptions listType={listType} />\n                              )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </>\n                  )}\n                </div>\n              )}\n            </Measure>\n          </div>\n        )}\n      </Measure>\n    </DataElementWrapper>\n  ) : null;\n};\n\nexport default OfficeEditorToolsHeader;\n"],"sourceRoot":""}