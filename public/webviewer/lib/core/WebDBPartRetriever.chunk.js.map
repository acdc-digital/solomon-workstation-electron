{"version":3,"file":"WebDBPartRetriever.chunk.js","sources":["webpack:///WebDBPartRetriever.chunk.js","webpack:///./src/core/src/namespaces/PartRetrievers/WebDBPartRetriever.ts"],"sourcesContent":["(window[\"wpCoreControlsBundle\"] = window[\"wpCoreControlsBundle\"] || []).push([[12],{\n\n/***/ 530:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _PartRetriever__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(113);\n/* harmony import */ var _Exports__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(439);\n\n\n\n\nvar WebDBPartRetriever = /** @class */ (function (_super) {\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ \"c\"])(WebDBPartRetriever, _super);\n    function WebDBPartRetriever(db, decrypt, decryptOptions) {\n        var _this = _super.call(this, db, decrypt, decryptOptions) || this;\n        _this.db = db;\n        return _this;\n    }\n    WebDBPartRetriever.prototype.request = function (parts) {\n        var self = this;\n        Object(lodash__WEBPACK_IMPORTED_MODULE_1__[\"each\"])(parts, function (part) {\n            self.db.get(part, function (err, data, compressed) {\n                if (err) {\n                    return self.trigger('partReady.partRetriever', {\n                        part: part,\n                        error: err,\n                    });\n                }\n                return self.trigger('partReady.partRetriever', {\n                    part: part,\n                    data: data,\n                    completedSynchronously: false,\n                    cancelled: false,\n                    error: null,\n                    compressed: compressed,\n                });\n            });\n        });\n    };\n    WebDBPartRetriever.prototype.loadHeaders = function (callback) {\n        callback();\n    };\n    return WebDBPartRetriever;\n}(_PartRetriever__WEBPACK_IMPORTED_MODULE_2__[/* default */ \"a\"]));\nObject(_Exports__WEBPACK_IMPORTED_MODULE_3__[/* exportEventHandler */ \"a\"])(WebDBPartRetriever);\nObject(_Exports__WEBPACK_IMPORTED_MODULE_3__[/* exportPartRetrieverFunctions */ \"b\"])(WebDBPartRetriever);\n/* harmony default export */ __webpack_exports__[\"default\"] = (WebDBPartRetriever);\n\n\n/***/ })\n\n}]);","import { each } from 'lodash';\nimport { OfflineDB } from './ObjectFetcher';\nimport PartRetriever, { PartRetrieverDecrypt, PartRetrieverDecryptOptions } from './PartRetriever';\nimport { exportEventHandler, exportPartRetrieverFunctions } from '../Exports';\n\nclass WebDBPartRetriever extends PartRetriever {\n  db: OfflineDB; // is this right?\n\n  constructor(db: OfflineDB, decrypt: PartRetrieverDecrypt, decryptOptions: PartRetrieverDecryptOptions) {\n    super(db, decrypt, decryptOptions);\n\n    this.db = db;\n  }\n\n  request(parts: Array<string>) {\n    const self = this;\n\n    each(parts, function(part) {\n      self.db.get(part, function(err, data, compressed) {\n        if (err) {\n          return self.trigger('partReady.partRetriever', {\n            part: part,\n            error: err,\n          });\n        }\n\n        return self.trigger('partReady.partRetriever', {\n          part: part,\n          data: data,\n          completedSynchronously: false,\n          cancelled: false,\n          error: null,\n          compressed: compressed,\n        });\n      });\n    });\n  }\n\n  loadHeaders(callback: () => void) {\n    callback();\n  }\n}\n\nexportEventHandler(WebDBPartRetriever);\nexportPartRetrieverFunctions(WebDBPartRetriever);\n\nexport default WebDBPartRetriever;\n"],"mappings":";AAAA;ACsCA;","sourceRoot":""}