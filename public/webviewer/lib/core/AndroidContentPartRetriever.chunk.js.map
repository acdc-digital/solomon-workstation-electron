{"version":3,"file":"AndroidContentPartRetriever.chunk.js","sources":["webpack:///AndroidContentPartRetriever.chunk.js","webpack:///./src/core/src/namespaces/PartRetrievers/AndroidContentPartRetriever.ts"],"sourcesContent":["(window[\"wpCoreControlsBundle\"] = window[\"wpCoreControlsBundle\"] || []).push([[1],{\n\n/***/ 522:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var _util_constants_status__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(293);\n/* harmony import */ var _HttpPartRetriever__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(518);\n/* harmony import */ var _Exports__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(439);\n\n\n\n\nvar exports = window;\n/**\n * Construct a new AndroidContentRequest.\n * @name AndroidContentRequest\n * @param {string} url The URL of the file to load. May be relative to the current page.\n * @ignore\n */\nvar AndroidContentRequest = /** @class */ (function (_super) {\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ \"c\"])(AndroidContentRequest, _super);\n    function AndroidContentRequest(url, range) {\n        var _this = _super.call(this, url, range) || this;\n        _this.url = url;\n        _this.range = range;\n        _this.request = new XMLHttpRequest();\n        _this.request.open('GET', _this.url, true);\n        if (exports.Uint8Array) {\n            _this.request.responseType = 'arraybuffer';\n        }\n        _this.request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        _this.status = _util_constants_status__WEBPACK_IMPORTED_MODULE_1__[/* RequestStatus */ \"a\"]['NOT_STARTED'];\n        return _this;\n    }\n    return AndroidContentRequest;\n}(_HttpPartRetriever__WEBPACK_IMPORTED_MODULE_2__[\"ByteRangeRequest\"]));\n/**\n * Constructs a new AndroidContentPartRetriever.\n * AndroidContentPartRetriever retrieves Document parts asynchronously from a .xod file that exists locally in an Android app.\n * <br/><br/>\n * <b>Note</b>: As of version 6.0, directly constructing a part retriever is deprecated and the capability will be removed in a future version. Please use the {@link Core.PartRetrievers#getPartRetriever} function instead.\n *\n * @class Represents a http part retriever.\n * @name AndroidContentPartRetriever\n * @extends Core.PartRetrievers.HttpPartRetriever\n * @memberof Core.PartRetrievers\n * @param {string} url The URL of the file to load. May be relative to the current page.\n * @param {Core.PartRetrievers.CacheHinting} cacheHint The type of cache hinting to use\n * @param {function} decrypt Function to be called to decrypt a part of the file\n * @param {Object} decryptOptions An object with options for the decryption e.g. {p: \"pass\", type: \"aes\"} where is p is the password\n * @ignore\n */\n// TODO-TS CacheHinting\nvar AndroidContentPartRetriever = /** @class */ (function (_super) {\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ \"c\"])(AndroidContentPartRetriever, _super);\n    function AndroidContentPartRetriever(url, cacheHint, decrypt, decryptOptions) {\n        var _this = _super.call(this, url, cacheHint, decrypt, decryptOptions) || this;\n        _this.rangeRequest = AndroidContentRequest;\n        return _this;\n    }\n    AndroidContentPartRetriever.prototype.createRangeURL = function (url, range) {\n        return url + \"/bytes=\" + range.start + \",\" + (range.stop ? range.stop : '');\n    };\n    return AndroidContentPartRetriever;\n}(_HttpPartRetriever__WEBPACK_IMPORTED_MODULE_2__[\"default\"]));\nObject(_Exports__WEBPACK_IMPORTED_MODULE_3__[/* exportEventHandler */ \"a\"])(AndroidContentPartRetriever);\nObject(_Exports__WEBPACK_IMPORTED_MODULE_3__[/* exportPartRetrieverFunctions */ \"b\"])(AndroidContentPartRetriever);\n/* harmony default export */ __webpack_exports__[\"default\"] = (AndroidContentPartRetriever);\n\n\n/***/ })\n\n}]);","import { RequestStatus } from '../../util/constants/status';\nimport { PartRetrieverDecrypt, PartRetrieverDecryptOptions, PartRetrieverRange } from './PartRetriever';\nimport HttpPartRetriever, { ByteRangeRequest } from './HttpPartRetriever';\nimport { CacheHinting } from './constants';\nimport { exportEventHandler, exportPartRetrieverFunctions } from '../Exports';\n\nconst exports = window;\n\n/**\n * Construct a new AndroidContentRequest.\n * @name AndroidContentRequest\n * @param {string} url The URL of the file to load. May be relative to the current page.\n * @ignore\n */\nclass AndroidContentRequest extends ByteRangeRequest {\n  url: string;\n\n  range: PartRetrieverRange;\n\n  constructor(url: string, range: PartRetrieverRange) {\n    super(url, range);\n    this.url = url;\n    this.range = range;\n\n    this.request = new XMLHttpRequest();\n    this.request.open('GET', this.url, true);\n    if (exports.Uint8Array) {\n      this.request.responseType = 'arraybuffer';\n    }\n\n    this.request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n    this.status = RequestStatus['NOT_STARTED'];\n  }\n}\n\n\n/**\n * Constructs a new AndroidContentPartRetriever.\n * AndroidContentPartRetriever retrieves Document parts asynchronously from a .xod file that exists locally in an Android app.\n * <br/><br/>\n * <b>Note</b>: As of version 6.0, directly constructing a part retriever is deprecated and the capability will be removed in a future version. Please use the {@link Core.PartRetrievers#getPartRetriever} function instead.\n *\n * @class Represents a http part retriever.\n * @name AndroidContentPartRetriever\n * @extends Core.PartRetrievers.HttpPartRetriever\n * @memberof Core.PartRetrievers\n * @param {string} url The URL of the file to load. May be relative to the current page.\n * @param {Core.PartRetrievers.CacheHinting} cacheHint The type of cache hinting to use\n * @param {function} decrypt Function to be called to decrypt a part of the file\n * @param {Object} decryptOptions An object with options for the decryption e.g. {p: \"pass\", type: \"aes\"} where is p is the password\n * @ignore\n */\n\n\n// TODO-TS CacheHinting\nclass AndroidContentPartRetriever extends HttpPartRetriever {\n  rangeRequest: typeof AndroidContentRequest;\n\n  constructor(url: string, cacheHint: CacheHinting, decrypt: PartRetrieverDecrypt, decryptOptions: PartRetrieverDecryptOptions) {\n    super(url, cacheHint, decrypt, decryptOptions);\n\n    this.rangeRequest = AndroidContentRequest;\n  }\n\n  createRangeURL(url: string, range: PartRetrieverRange) {\n    return `${url}/bytes=${range.start},${range.stop ? range.stop : ''}`;\n  }\n}\n\nexportEventHandler(AndroidContentPartRetriever);\nexportPartRetrieverFunctions(AndroidContentPartRetriever);\n\nexport default AndroidContentPartRetriever;\n"],"mappings":";AAAA;ACwDA;","sourceRoot":""}